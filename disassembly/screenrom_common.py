from commands import *

def add_screenrom_common():


    # =======================================================================
    # py8dis configuration
    # =======================================================================


    config.set_label_references(False)
    config.set_show_char_literals(False)
    config.set_show_autogenerated_labels(False)
    config.set_hex_dump(False)

    hook_subroutine(0xF7D1, "kern_print_string", stringhi_hook)

    entry(0xa002, "initialize")

    label(0xa005, "workspace_rom")
    byte(0xa005, 0x300, 8)

    expr(0xa8c1, "<workspace_rom")
    expr(0xa8c5, ">workspace_rom")
    expr(0xa8c9, "<workspace_ram")
    expr(0xa8cd, ">workspace_ram")

    expr(0xa7e3, "<font_ram")
    expr(0xa7e5, ">font_ram")
    expr(0xa904, "<font_ram")
    expr(0xa908, ">font_ram")
    expr(0xa7f5, ">font_end")

    entry(0xa395, "rdch")
    expr(0xa389, "<rdch")
    expr(0xa38e, ">rdch")

    entry(0xa426, "wrch_vdu28a")
    expr(0xa41c, "<wrch_vdu28a")
    expr(0xa421, ">wrch_vdu28a")

    entry(0xa445, "wrch_vdu28b")
    expr(0xa439, "<wrch_vdu28b")
    expr(0xa43e, ">wrch_vdu28b")

    entry(0xa46f, "wrch_vdu28c")
    expr(0xa463, "<wrch_vdu28c")
    expr(0xa468, ">wrch_vdu28c")

    entry(0xa49f, "wrch_vdu28d")
    expr(0xa493, "<wrch_vdu28d")
    expr(0xa498, ">wrch_vdu28d")

    entry(0xa4d6, "wrch_vdu23a")
    expr(0xa4cc, "<wrch_vdu23a")
    expr(0xa4d1, ">wrch_vdu23a")

    entry(0xa502, "wrch_vdu23b")
    expr(0xa4f6, "<wrch_vdu23b")
    expr(0xa4fb, ">wrch_vdu23b")

    entry(0xa524, "wrch_vdu01")
    expr(0xa51a, "<wrch_vdu01")
    expr(0xa51f, ">wrch_vdu01")

    entry(0xa53b, "wrch_vdu31a")
    expr(0xa531, "<wrch_vdu31a")
    expr(0xa536, ">wrch_vdu31a")

    entry(0xa55f, "wrch_vdu31b")
    expr(0xa553, "<wrch_vdu31b")
    expr(0xa558, ">wrch_vdu31b")

    entry(0xa581, "wrch_vdu22")
    expr(0xa577, "<wrch_vdu22")
    expr(0xa57c, ">wrch_vdu22")

    entry(0xa92e, "wrch_default")
    expr(0xa5c3, "<wrch_default")
    expr(0xa8e8, "<wrch_default")
    expr(0xa5c8, ">wrch_default")
    expr(0xa8ed, ">wrch_default")

    pc=0xacf4
    label(pc, "mos_vectors")
    wordentry(pc, 2)

    pc=0xaae7
    label(pc, "bget_bput_vectors")
    wordentry(0xaae7, 4)

    label(0xab72, "bget_fast")
    label(0xab78, "bput_fast")
    label(0xab30, "bget_slow")
    label(0xaaef, "bput_slow")

    pc=0xacc3
    label(pc, "load_save_vectors")
    wordentry(pc, 4)

    label(0xaccb, "load_fast")
    label(0xacd1, "save_fast")

    entry(0xaff0)
    entry(0xaff3)
    entry(0xaff6)
    entry(0xaff9)
    entry(0xaffc)

    # MOS Vectors
    label(0x0208, "wrcvec")
    expr_label(0x0209, "wrcvec+1")
    label(0x020a, "rdcvec")
    expr_label(0x020b, "rdcvec+1")
    label(0x020c, "lodvec")
    expr_label(0x020d, "lodvec+1")
    label(0x0214, "bgtvec")
    label(0x03fe, "plotvec")
    expr_label(0x03ff, "plotvec+1")

    # Basic routines
    label(0xc2b6, "basic_execute_command")
    label(0xc4e6, "basic_post_test")
    label(0xc55b, "basic_next_statement")


    # MOS Routines
    label(0xf96e, "kern_load")
    label(0xfae5, "kern_save")
    label(0xfb8a, "kern_wait_100ms")
    label(0xfbee, "kern_tape_get_byte")
    label(0xfc23, "kern_tape_byte_to_checksum")
    label(0xfc7c, "kern_tape_put_byte")
    label(0xfcbd, "kern_count_tape_pulse_duration")
    label(0xfccd, "kern_test_tape_input")
    label(0xfcd8, "kern_wait_for_2400_falling")
    label(0xfcda, "kern_wait_for_N_2400_falling")
    label(0xfd1a, "kern_BEL")
    label(0xfe52, "kern_nvwrch")
    label(0xfe66, "kern_wait_vsync")
    label(0xfe71, "kern_scan_keyboard")
    label(0xfe94, "kern_nvrdch")
    label(0xfeb1, "kern_handle_key")
    label(0xfefb, "kern_send_A_to_printer")
    label(0xff37, "kern_rts")
    label(0xffed, "OSCRLF")
    label(0xfff4, "OSWRCH")

    pc=0xaac9
    label(pc, "command_table")
    expr_label(pc+1, "command_table+1")
    for i in range(5):
        pc = stringhi(pc)
        pc = code_ptr(pc + 1, pc)
    pc = code_ptr(pc + 1, pc)


    # Control code table
    pc=0xa7fe
    label(pc, "vdu_code_table")
    label(pc+0x4e, "vdu_code_lookup")
    for i in range(26):
        byte(pc)
        wordentry(pc+1)
        pc = pc + 3

    expr(0xa857, "vdu_code_lookup - vdu_code_table")

    label(0xa519, "vdu01_entry")
    label(0xa5d3, "vdu04_entry")
    label(0xa5dc, "vdu05_entry")
    label(0xa7f9, "vdu06_entry")
    label(0xa67c, "vdu08_entry")
    label(0xa63c, "vdu09_entry")
    label(0xac20, "vdu10_entry")
    label(0xa66c, "vdu11_entry")
    label(0xa619, "vdu12_entry")
    label(0xa86c, "vdu13_entry")
    label(0xa5e1, "vdu14_entry")
    label(0xa5e5, "vdu15_entry")
    label(0xa5ea, "vdu17_entry")
    label(0xa5f0, "vdu18_entry")
    label(0xa5f6, "vdu19_entry")
    label(0xa7dc, "vdu20_entry")
    label(0xa5ff, "vdu21_entry")
    label(0xa576, "vdu22_entry")
    label(0xa4cb, "vdu23_entry")
    label(0xa604, "vdu26_entry")
    label(0xa417, "vdu28_entry")
    label(0xa65b, "vdu30_entry")
    label(0xa530, "vdu31_entry")

    entry(0xa39d, "unreachable1")
    entry(0xa87e, "unreachable2")
